%!PS-Adobe-2.0 EPSF-2.0
%%Title: hybrid_perf_lxgp4.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Aug 18 15:14:43 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -63 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hybrid_perf_lxgp4.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alin Murarasu,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Aug 18 15:14:43 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Arial) findfont 190 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 608 M
5756 0 V
stroke
LTb
1159 608 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 1133 M
3496 0 V
2146 0 R
114 0 V
stroke
LTb
1159 1133 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 1659 M
5756 0 V
stroke
LTb
1159 1659 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 2184 M
5756 0 V
stroke
LTb
1159 2184 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 2710 M
5756 0 V
stroke
LTb
1159 2710 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 80) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 3235 M
5756 0 V
stroke
LTb
1159 3235 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 100) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 3761 M
5756 0 V
stroke
LTb
1159 3761 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 120) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 4286 M
5756 0 V
stroke
LTb
1159 4286 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 140) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1159 4812 M
5756 0 V
stroke
LTb
1159 4812 M
63 0 V
5693 0 R
-63 0 V
-5807 0 R
( 160) Rshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1462 608 M
0 4204 V
stroke
LTb
1462 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 2) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 2068 608 M
0 4204 V
stroke
LTb
2068 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 4) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 2674 608 M
0 4204 V
stroke
LTb
2674 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 6) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 3280 608 M
0 4204 V
stroke
LTb
3280 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 8) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 3886 608 M
0 4204 V
stroke
LTb
3886 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 4491 608 M
0 4204 V
stroke
LTb
4491 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 12) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 5097 608 M
0 63 V
0 950 R
0 3191 V
stroke
LTb
5097 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 14) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 5703 608 M
0 63 V
0 950 R
0 3191 V
stroke
LTb
5703 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 6309 608 M
0 63 V
0 950 R
0 3191 V
stroke
LTb
6309 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 18) Cshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 6915 608 M
0 4204 V
stroke
LTb
6915 608 M
0 63 V
0 4141 R
0 -63 V
0 -4331 R
( 20) Cshow
1.000 UL
LTb
1.000 UL
LTb
1159 4812 N
0 -4204 V
5756 0 V
0 4204 V
-5756 0 V
Z stroke
LCb setrgbcolor
380 2710 M
currentpoint gsave translate 90 rotate 0 0 M
(GFlops) Cshow
grestore
LTb
LCb setrgbcolor
4037 133 M
(Number of Dimensions) Cshow
LTb
1.500 UP
1.000 UL
LTb
1.000 UL
LT0
0.50 0.50 0.50 C 4655 671 N
0 950 V
2146 0 V
0 -950 V
-2146 0 V
Z stroke
4655 1621 M
2146 0 V
1.500 UP
stroke
2.500 UL
LT0
LTb
6023 1526 M
(StarPU dmda) Rshow
LT0
6137 1526 M
550 0 V
1159 778 M
303 473 V
303 634 V
303 789 V
303 265 V
303 420 V
303 17 V
303 404 V
303 80 V
303 -125 V
302 43 V
303 -51 V
303 248 V
303 -153 V
303 23 V
303 1 V
303 20 V
303 12 V
303 15 V
303 13 V
1159 778 Star
1462 1251 Star
1765 1885 Star
2068 2674 Star
2371 2939 Star
2674 3359 Star
2977 3376 Star
3280 3780 Star
3583 3860 Star
3886 3735 Star
4188 3778 Star
4491 3727 Star
4794 3975 Star
5097 3822 Star
5400 3845 Star
5703 3846 Star
6006 3866 Star
6309 3878 Star
6612 3893 Star
6915 3906 Star
6412 1526 Star
1.500 UP
2.500 UL
LT1
LTb
6023 1336 M
(StarPU eager) Rshow
LT1
6137 1336 M
550 0 V
1159 831 M
303 402 V
303 540 V
303 417 V
303 448 V
303 545 V
303 164 V
303 -168 V
303 74 V
303 -86 V
302 50 V
303 465 V
303 -317 V
303 385 V
303 33 V
303 338 V
303 14 V
303 -254 V
303 13 V
303 284 V
1159 831 Box
1462 1233 Box
1765 1773 Box
2068 2190 Box
2371 2638 Box
2674 3183 Box
2977 3347 Box
3280 3179 Box
3583 3253 Box
3886 3167 Box
4188 3217 Box
4491 3682 Box
4794 3365 Box
5097 3750 Box
5400 3783 Box
5703 4121 Box
6006 4135 Box
6309 3881 Box
6612 3894 Box
6915 4178 Box
6412 1336 Box
1.500 UP
2.500 UL
LT2
LTb
6023 1146 M
(OMP + CUDA) Rshow
LT2
6137 1146 M
550 0 V
1159 962 M
303 417 V
303 676 V
303 883 V
303 300 V
303 585 V
303 -475 V
303 863 V
303 102 V
303 -167 V
302 59 V
303 86 V
303 -688 V
303 761 V
303 46 V
303 -90 V
303 -28 V
303 32 V
303 13 V
303 18 V
1159 962 BoxF
1462 1379 BoxF
1765 2055 BoxF
2068 2938 BoxF
2371 3238 BoxF
2674 3823 BoxF
2977 3348 BoxF
3280 4211 BoxF
3583 4313 BoxF
3886 4146 BoxF
4188 4205 BoxF
4491 4291 BoxF
4794 3603 BoxF
5097 4364 BoxF
5400 4410 BoxF
5703 4320 BoxF
6006 4292 BoxF
6309 4324 BoxF
6612 4337 BoxF
6915 4355 BoxF
6412 1146 BoxF
1.500 UP
2.500 UL
LT3
LTb
6023 956 M
(Static) Rshow
LT3
6137 956 M
550 0 V
1159 1086 M
303 827 V
303 1050 V
303 443 V
303 336 V
303 186 V
303 309 V
303 150 V
303 40 V
303 105 V
302 46 V
303 -1 V
303 39 V
303 -36 V
303 87 V
303 -88 V
303 18 V
303 13 V
303 23 V
303 22 V
1159 1086 TriU
1462 1913 TriU
1765 2963 TriU
2068 3406 TriU
2371 3742 TriU
2674 3928 TriU
2977 4237 TriU
3280 4387 TriU
3583 4427 TriU
3886 4532 TriU
4188 4578 TriU
4491 4577 TriU
4794 4616 TriU
5097 4580 TriU
5400 4667 TriU
5703 4579 TriU
6006 4597 TriU
6309 4610 TriU
6612 4633 TriU
6915 4655 TriU
6412 956 TriU
1.500 UP
2.500 UL
LT4
LTb
6023 766 M
(Max) Rshow
LT4
6137 766 M
550 0 V
1159 1099 M
303 823 V
303 990 V
303 630 V
303 468 V
303 196 V
303 114 V
303 159 V
303 70 V
303 64 V
302 47 V
303 32 V
303 22 V
303 39 V
303 9 V
303 -85 V
303 31 V
303 27 V
303 15 V
303 16 V
1159 1099 TriUF
1462 1922 TriUF
1765 2912 TriUF
2068 3542 TriUF
2371 4010 TriUF
2674 4206 TriUF
2977 4320 TriUF
3280 4479 TriUF
3583 4549 TriUF
3886 4613 TriUF
4188 4660 TriUF
4491 4692 TriUF
4794 4714 TriUF
5097 4753 TriUF
5400 4762 TriUF
5703 4677 TriUF
6006 4708 TriUF
6309 4735 TriUF
6612 4750 TriUF
6915 4766 TriUF
6412 766 TriUF
1.000 UL
LTb
1159 4812 N
0 -4204 V
5756 0 V
0 4204 V
-5756 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial
